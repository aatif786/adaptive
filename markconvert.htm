<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Markdown to Google Docs Converter</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/marked/4.3.0/marked.min.js"></script>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        
        .container {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-top: 20px;
        }
        
        @media (max-width: 768px) {
            .container {
                grid-template-columns: 1fr;
            }
        }
        
        h1 {
            color: #333;
            text-align: center;
            margin-bottom: 10px;
        }
        
        .subtitle {
            text-align: center;
            color: #666;
            margin-bottom: 30px;
        }
        
        .input-section, .output-section {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        h2 {
            margin-top: 0;
            color: #444;
            font-size: 1.3em;
        }
        
        textarea {
            width: 100%;
            min-height: 400px;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-family: 'Courier New', monospace;
            font-size: 14px;
            resize: vertical;
            box-sizing: border-box;
        }
        
        .button-group {
            margin-top: 15px;
            display: flex;
            gap: 10px;
        }
        
        button {
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
        }
        
        button:hover {
            background-color: #45a049;
        }
        
        button:active {
            transform: translateY(1px);
        }
        
        .secondary-btn {
            background-color: #2196F3;
        }
        
        .secondary-btn:hover {
            background-color: #1976D2;
        }
        
        #output {
            min-height: 400px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background-color: #fff;
            overflow-y: auto;
            max-height: 600px;
            font-family: Arial, sans-serif;
            line-height: 1.6;
        }
        
        /* Styles for rendered markdown */
        #output h1 { font-size: 2em; margin: 0.67em 0; font-weight: bold; }
        #output h2 { font-size: 1.5em; margin: 0.75em 0; font-weight: bold; }
        #output h3 { font-size: 1.17em; margin: 0.83em 0; font-weight: bold; }
        #output h4 { font-size: 1em; margin: 1.12em 0; font-weight: bold; }
        #output h5 { font-size: 0.83em; margin: 1.5em 0; font-weight: bold; }
        #output h6 { font-size: 0.75em; margin: 1.67em 0; font-weight: bold; }
        
        #output p { margin: 1em 0; }
        #output ul, #output ol { margin: 1em 0; padding-left: 2em; }
        #output li { margin: 0.5em 0; }
        #output code {
            background-color: #f4f4f4;
            padding: 2px 4px;
            border-radius: 3px;
            font-family: 'Courier New', monospace;
            font-size: 0.9em;
        }
        #output pre {
            background-color: #f4f4f4;
            padding: 10px;
            border-radius: 4px;
            overflow-x: auto;
        }
        #output pre code {
            background-color: transparent;
            padding: 0;
        }
        #output blockquote {
            border-left: 4px solid #ddd;
            margin: 1em 0;
            padding-left: 1em;
            color: #666;
        }
        #output table {
            border-collapse: collapse;
            margin: 1em 0;
        }
        #output th, #output td {
            border: 1px solid #ddd;
            padding: 8px;
        }
        #output th {
            background-color: #f4f4f4;
            font-weight: bold;
        }
        
        .copy-notification {
            position: fixed;
            top: 20px;
            right: 20px;
            background-color: #4CAF50;
            color: white;
            padding: 12px 20px;
            border-radius: 4px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            opacity: 0;
            transition: opacity 0.3s;
            z-index: 1000;
        }
        
        .copy-notification.show {
            opacity: 1;
        }
        
        .tips {
            background-color: #e3f2fd;
            padding: 15px;
            border-radius: 4px;
            margin-bottom: 20px;
        }
        
        .tips h3 {
            margin-top: 0;
            color: #1976D2;
        }
        
        .tips ul {
            margin: 10px 0;
            padding-left: 20px;
        }
        
        .tips li {
            margin: 5px 0;
        }
    </style>
</head>
<body>
    <h1>Markdown to Google Docs Converter</h1>
    <p class="subtitle">Convert your Markdown text to formatted HTML that copies perfectly into Google Docs</p>
    
    <div class="tips">
        <h3>üìù Quick Markdown Guide:</h3>
        <ul>
            <li><strong>Headers:</strong> # H1, ## H2, ### H3, etc.</li>
            <li><strong>Bold:</strong> **text** or __text__</li>
            <li><strong>Italic:</strong> *text* or _text_</li>
            <li><strong>Lists:</strong> - item or * item for bullets, 1. item for numbers</li>
            <li><strong>Links:</strong> [text](url)</li>
            <li><strong>Code:</strong> `inline code` or ``` for code blocks</li>
            <li><strong>Quotes:</strong> > quoted text</li>
        </ul>
    </div>
    
    <div class="container">
        <div class="input-section">
            <h2>üì• Input Markdown</h2>
            <textarea id="markdown-input" placeholder="Enter your Markdown text here...

# Example Header
This is **bold** and this is *italic*.

## Lists
- First item
- Second item
  - Nested item

### Code Example
`inline code` and:

```
code block
```

> This is a quote

[This is a link](https://example.com)"></textarea>
            <div class="button-group">
                <button onclick="convertMarkdown()">Convert to HTML</button>
                <button class="secondary-btn" onclick="clearInput()">Clear Input</button>
            </div>
        </div>
        
        <div class="output-section">
            <h2>üì§ Formatted Output</h2>
            <div id="output"></div>
            <div class="button-group">
                <button onclick="copyToClipboard()">Copy to Clipboard</button>
                <button class="secondary-btn" onclick="selectAll()">Select All</button>
            </div>
        </div>
    </div>
    
    <div class="copy-notification" id="copy-notification">
        ‚úì Copied to clipboard! Paste into Google Docs now.
    </div>
    
    <script>
        // Configure marked options
        marked.setOptions({
            breaks: true,
            gfm: true,
            headerIds: false,
            mangle: false
        });
        
        function convertMarkdown() {
            const input = document.getElementById('markdown-input').value;
            const output = document.getElementById('output');
            
            if (!input.trim()) {
                output.innerHTML = '<p style="color: #999;">Enter some Markdown text to see the converted output...</p>';
                return;
            }
            
            // Convert Markdown to HTML
            const html = marked.parse(input);
            output.innerHTML = html;
        }
        
        function copyToClipboard() {
            const output = document.getElementById('output');
            
            if (!output.innerHTML || output.innerHTML.includes('Enter some Markdown')) {
                alert('Please convert some Markdown text first!');
                return;
            }
            
            // Create a temporary element to hold the HTML content
            const tempDiv = document.createElement('div');
            tempDiv.innerHTML = output.innerHTML;
            document.body.appendChild(tempDiv);
            
            // Select the content
            const range = document.createRange();
            range.selectNodeContents(tempDiv);
            const selection = window.getSelection();
            selection.removeAllRanges();
            selection.addRange(range);
            
            // Copy to clipboard
            try {
                document.execCommand('copy');
                showNotification();
            } catch (err) {
                alert('Failed to copy. Please try selecting and copying manually.');
            }
            
            // Clean up
            selection.removeAllRanges();
            document.body.removeChild(tempDiv);
        }
        
        function selectAll() {
            const output = document.getElementById('output');
            const range = document.createRange();
            range.selectNodeContents(output);
            const selection = window.getSelection();
            selection.removeAllRanges();
            selection.addRange(range);
        }
        
        function clearInput() {
            document.getElementById('markdown-input').value = '';
            document.getElementById('output').innerHTML = '';
        }
        
        function showNotification() {
            const notification = document.getElementById('copy-notification');
            notification.classList.add('show');
            setTimeout(() => {
                notification.classList.remove('show');
            }, 3000);
        }
        
        // Auto-convert on input
        document.getElementById('markdown-input').addEventListener('input', function() {
            convertMarkdown();
        });
        
        // Convert on load if there's example text
        window.addEventListener('load', function() {
            if (document.getElementById('markdown-input').value) {
                convertMarkdown();
            }
        });
    </script>
</body>
</html>